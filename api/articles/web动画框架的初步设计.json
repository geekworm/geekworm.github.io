{"title":"web动画框架的初步设计","slug":"web动画框架的初步设计","date":"2017-03-22T11:38:00.000Z","updated":"2018-05-08T03:49:28.220Z","comments":true,"excerpt":"<p>我希望有一天webApp能够达到原生应用的用户体验。</p>","content":"<p>我希望有一天webApp能够达到原生应用的用户体验。</p>\n<a id=\"more\"></a>\n<p><em>最后证实是重复造轮子，人家还比我造的好太多，大家都散了吧。 （ 让我哭一会</em><br><a href=\"https://github.com/berzniz/react-overdrive\" target=\"_blank\" rel=\"noopener\">https://github.com/berzniz/react-overdrive</a></p>\n<p><br></p>\n<p><br></p>\n<hr>\n<blockquote>\n<p>第一次写这么复杂的东西，我的语文水平我自己清楚，看不懂的可以直接到下面评论区夸我了。</p>\n</blockquote>\n<h2 id=\"缘起\"><a href=\"#缘起\" class=\"headerlink\" title=\"缘起\"></a><del>缘起</del></h2><p>我是怎么喜欢上material design的？ 多半是因为这张炫酷的图。</p>\n<p><img src=\"/img/web动画框架的初步设计/炫酷ui.gif\" alt=\"\"></p>\n<p>哇！炫酷！流畅！</p>\n<p>我立即搜索material design的前端框架，发现没有一款可以实现这种效果的。</p>\n<p>什么？？？？ 我大前端连区区一个动画都搞不定！！！</p>\n<blockquote>\n<p>codepen上的虽然有类似的特效，但从复用性，性能等方面考虑都没有能作为框架的。</p>\n</blockquote>\n<p>于是开始造轮之路。</p>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>初步实现的效果图：</p>\n<p><img src=\"/img/web动画框架的初步设计/效果图.gif\" alt=\"\"></p>\n<blockquote>\n<p>效果可能不是很好，可能是因为没有调整动画曲线，不过这都是小问题。<br>源码需要重构，不好意思拿出来。感兴趣的话可以联系我。</p>\n</blockquote>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>我们将前面的炫酷ui可以分成两部分。</p>\n<p><img src=\"/img/web动画框架的初步设计/分割.png\" alt=\"\"></p>\n<p>上面这两个界面分开来的话，相信对各位前端大神都是小菜一碟的吧。</p>\n<p>这个框架的思路就是用程序来自动补间。</p>\n<p>我们在每个元素身上放个key。</p>\n<p><img src=\"/img/web动画框架的初步设计/key.png\" alt=\"\"></p>\n<p>先记录下所有被标记的元素的位置。</p>\n<p>页面改变后将其自动补间到新的位置。包括高度宽度等css属性。</p>\n<p>嗯，但这个补间怎么做？<code>js</code>？<code>css transition</code>？</p>\n<p>显然<code>css transition</code>是更高效的选择，要使用<code>css transition</code>的前提就是页面的转换不能破坏这个元素。</p>\n<p>现有路由库如：<code>react-router</code>等，都是删掉原来的元素，填入新的元素，所以<code>css transition</code>是行不通的。</p>\n<p>然而我选了一种特别极端的方法，添加一个布局层。</p>\n<h2 id=\"布局层\"><a href=\"#布局层\" class=\"headerlink\" title=\"布局层\"></a>布局层</h2><p><img src=\"/img/web动画框架的初步设计/float.png\" alt=\"\"></p>\n<p>上图红色部分就是布局层，布局层没有显示，没有动画，由路由负责管理。</p>\n<p>图片中有内容的元素是绝对定位的，存在在布局层之上，不受路由管理，称为<code>Plane</code>(面)。</p>\n<p>用程序把<code>Plane</code>放在对应的布局层之上，设置高度宽度，加上<code>css transition</code>。当布局层发送改变时，刷新<code>Plane</code>的位置，高度，宽度，内容。这个过程中<code>Plane</code>是不会被重建的于是<code>css transition</code>就产生了补间动画。</p>\n<blockquote>\n<p>得益于react的 vdom 和 jsx 我们可以按正常的方式写元素，然后把他们渲染在其他地方。</p>\n</blockquote>\n<hr>\n<p>再说下<a href=\"https://themes.materializecss.com/pages/demo#0\" target=\"_blank\" rel=\"noopener\">这个站</a></p>\n<p>这个站也有布局转换的过渡效果。</p>\n<p><img src=\"/img/web动画框架的初步设计/垃圾1.png\" alt=\"\"><img src=\"/img/web动画框架的初步设计/垃圾2.png\" alt=\"\"></p>\n<p>可以看到布局变化后，原来的元素并没有被清理，codepen上许多方案也有这种缺陷，页面一多，就会有很多元素，肯定不行。</p>\n<p>这篇文章的方法会真正释放掉旧的元素，也算个优点。</p>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>如果你有更好的方法欢迎与我讨论。</p>\n<p><span style=\"font-size:12px;color:#888\">封面画师: <a href=\"http://www.pixiv.net/member.php?id=3376987\" target=\"_blank\" rel=\"noopener\">秋月</a></span></p>\n","thumbnail":"/img/web动画框架的初步设计/cover.jpg","primarycolor":"teal","accentcolor":"green","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"开源","path":"api/tags/开源.json"},{"name":"js","path":"api/tags/js.json"},{"name":"html","path":"api/tags/html.json"}]}